[{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://vsp.berlin/matsim-r/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://vsp.berlin/matsim-r/articles/Exampleproject.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Example project","text":"vignette offers example workflow MATSim output thematic plots maps. general overview package structure please read introduction. short recap however: functions divided four categories start respective prefix. Read_, process_, plot_ compare_ future simwrapper_. better understand naming conventions (example create functions) consult vignette [LINK].","code":""},{"path":"https://vsp.berlin/matsim-r/articles/Exampleproject.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Example project","text":"MATSim R yet available CRAN, install MATSim R using github, use following code.","code":"devtools::install_github(\"matsim-vsp/matsim-r\")"},{"path":"https://vsp.berlin/matsim-r/articles/Exampleproject.html","id":"loading-the-package","dir":"Articles","previous_headings":"","what":"Loading the package","title":"Example project","text":"installed, can load MATSim R package using library() function:","code":"library(matsim) library(sf)"},{"path":"https://vsp.berlin/matsim-r/articles/Exampleproject.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading data","title":"Example project","text":"data ’ll use example project result Leipzig run can find following link. (https://svn.vsp.tu-berlin.de/repos/public-svn/matsim/scenarios/countries/de/leipzig/projects/namav/base-case/) want follow along, download copy folder. start, load output_trips.csv.gz file. zipped file, okay, functions can handle . also load shape file, can found . (https://svn.vsp.tu-berlin.de/repos/public-svn/matsim/scenarios/countries/de/leipzig/leipzig-v1.1/input/shp/)","code":"trips_file_path <- \"paste_file_path_here\"    # if you don't want to immediately load the whole file, the function read_output_trips has the option to only load the first n lines   output_trips <- read_output_trips(trips_file_path, n_max = 5000)"},{"path":"https://vsp.berlin/matsim-r/articles/Exampleproject.html","id":"plot-a-modal-split","dir":"Articles","previous_headings":"","what":"Plot a modal split","title":"Example project","text":"two functions calculate plot modal splits: plot_mainmode_piechart() plot_mainmode_piechart(). name suggests first one plots modal split pie chart second one bar chart. , use processing function process_get_mainmode_distribution() plot resulting table. processing function can also used just get raw numbers. going plot bar chart: resulting bar chart looks like : Leipzig modal split","code":"plot_mainmode_barchart(output_trips)"},{"path":"https://vsp.berlin/matsim-r/articles/Exampleproject.html","id":"spatial-filter","dir":"Articles","previous_headings":"","what":"Spatial filter","title":"Example project","text":"next step want spatially filter data. far looking trips simulation, now want focus touch project area. can use function process_filter_by_shape() shape file ’ve already loaded. parameter crs coordinate system number spatial_type describes way trips interact project area. four options inside, outside, originating destinating. case look originating trips. Using plot_mainmode_barchart() 507 originating trips, results following chart: Leipzig modal split - trips originating project area","code":"trips_originating <- process_filter_by_shape(output_trips, leipzig_shp, crs = 25832, spatial_type = \"originating\" )"},{"path":"https://vsp.berlin/matsim-r/articles/Exampleproject.html","id":"comparison-plots","dir":"Articles","previous_headings":"","what":"Comparison plots","title":"Example project","text":"next step compare modal split base model modal split scenario. need load output_trips file scenario, e.g. one. https://svn.vsp.tu-berlin.de/repos/public-svn/matsim/scenarios/countries/de/leipzig/projects/namav/drt-outskirts/ resulting plot looks like :","code":"#loading the scenario data output_trips_scenario <- read_output_trips(trips_file_scenario_path, n_max = 5000)  #filtering the scenario data trips_scenario_originating <- process_filter_by_shape(output_trips_scenario, leipzig_shp, crs = 25832, spatial_type = \"originating\")  #creating the comparison plot plot_compare_mainmode_barchart(trips_originating, trips_scenario_originating)"},{"path":"https://vsp.berlin/matsim-r/articles/Exampleproject.html","id":"maps","dir":"Articles","previous_headings":"","what":"Maps","title":"Example project","text":"package also allows plotting spatial data. example can plot trips originating project area see end. result interactive map using leaflet, showing places origin blue destinations red. (following image screenshot) Leipzig - originating trips","code":"plot_map_trips(trips_originating, crs = 25832)"},{"path":"https://vsp.berlin/matsim-r/articles/Introduction.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to MATSim R Library: analyzing transport simulations","text":"Welcome MATSim R package! MATSim R R package designed data processing visualization provides wide range functions create adjustable plots processed data. vignette give overview structure package quickly guide process creating plots using functions provided library.","code":""},{"path":"https://vsp.berlin/matsim-r/articles/Introduction.html","id":"overall-concept","dir":"Articles","previous_headings":"","what":"Overall concept","title":"Introduction to MATSim R Library: analyzing transport simulations","text":"purpose package provide comprehensive set tools efficiently analyze output MATSim runs. package primarily processes output data stored CSV XML files, especially called “output_trips”, “legs” “persons” files. adhering standardized naming convention, package offers streamlined functionality reading, processing, plotting YAML file creation use Simwrapper. XXXX LINK SIMWRAPPER GITHUB xxxx Data flow concept matsim r package package organized four categories, serving specific purpose: Reading Functions: functions begin prefix “read_” designed read import simulation output. Field types automatically set tibble created. Processing Functions: Functions prefix “process_” form core package’s data manipulation capabilities. Users can apply variety transformations calculations loaded tibbles, allowing advanced processing analysis tailored specific needs. Spatial input/output also supported, enabling users manipulate analyze data spatial level well. Plotting Functions: plotting functions prefix “plot_” enable users create visualizations based processed output data. functions offer range plotting options, allowing users explore patterns, trends, relationships within simulation results. plotting functions encompass two additional subcategories, namely mapping comparing. Within mapping subcategory, users can generate visualizations overlay simulation results onto geographical maps, providing insights spatial patterns distributions. comparing subcategory offers tools compare different simulation outputs, allowing analysis understanding variations scenarios data sets. Simwrapper: simwrapper category specialized group within package facilitates plotting using YAML files Simwrapper. feature allows users define complex plots visualizations YAML format, providing convenient efficient way generate custom visual representations simulation data. structure MATSim R aims simplify analysis MATSim runs. provides users intuitive workflow, reading processing simulation output generating informative plots leveraging power YAML-based configurations.","code":""},{"path":"https://vsp.berlin/matsim-r/articles/Introduction.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to MATSim R Library: analyzing transport simulations","text":"MATSim R yet available CRAN, install MATSim R using github, can use following code: However want use specific branch can specified like :","code":"devtools::install_github(\"matsim-vsp/matsim-r\") devtools::install_github(\"matsim-vsp/matsim-r\", ref = \"{name of the branch}\")"},{"path":"https://vsp.berlin/matsim-r/articles/Introduction.html","id":"loading-the-package","dir":"Articles","previous_headings":"","what":"Loading the package","title":"Introduction to MATSim R Library: analyzing transport simulations","text":"installed, can load MATSim R package using library() function:","code":"library(matsim)"},{"path":"https://vsp.berlin/matsim-r/articles/Introduction.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading Data","title":"Introduction to MATSim R Library: analyzing transport simulations","text":"first step analyzing transport simulations load output data R environment. MATSim provides several functions “read_” prefix purpose. Let’s take look can load simulation output stored CSV file: can now proceed explore analyze loaded data.","code":"# Specify the file path to your simulation output.  # It can be a directory path or direct path to a file output_file <- \"path/to/your/output_trips.csv\"  # Use the read_csv_trips() function to read the simulation data trips_data <- read_output_trips(output_file)"},{"path":"https://vsp.berlin/matsim-r/articles/Introduction.html","id":"data-processing","dir":"Articles","previous_headings":"","what":"Data Processing","title":"Introduction to MATSim R Library: analyzing transport simulations","text":"MATSim R offers range processing functions, prefixed “process_”, manipulate transform simulation data. functions allow perform various operations, filtering, aggregating, calculating additional metrics. Let’s see example applying transformation loaded data: XXXX EXAMPLE CORRECT? - filter shape?? XXXX Feel free explore different processing functions available package suit specific analysis requirements.","code":"# Filter the trips data to include only weekday trips weekday_trips <- process_filter_by_shape(trips_data)  # Calculate the average trip duration average_duration <- process_get_travelwaittime_by_mainmode(weekday_trips)"},{"path":"https://vsp.berlin/matsim-r/articles/Introduction.html","id":"plotting","dir":"Articles","previous_headings":"","what":"Plotting","title":"Introduction to MATSim R Library: analyzing transport simulations","text":"Visualizing simulation data crucial gaining insights effectively communicating findings. MATSim R provides wide range plotting functions help create informative visualizations. Let’s create scatter plot visualize relationship trip distance trip duration: can customize plot appearance explore plot types, line plots, bar charts, spatial maps, using various plotting functions provided MATSim R.","code":"# Create a scatter plot of trip distance among different main modes plot_distance_by_mainmode_barchart(trips_data, x = \"distance\", y = \"duration\")"},{"path":"https://vsp.berlin/matsim-r/articles/Introduction.html","id":"advanced-features-still-in-development","dir":"Articles","previous_headings":"","what":"Advanced Features (still in development)","title":"Introduction to MATSim R Library: analyzing transport simulations","text":"still development -","code":""},{"path":"https://vsp.berlin/matsim-r/articles/Introduction.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Introduction to MATSim R Library: analyzing transport simulations","text":"vignette, introduced MATSim R package, designed specifically analyzing MATSim outputs. hope ’ll great experience using library glad receive feedback https://github.com/matsim-vsp/matsim-r/tree/master mail soboliev@vsp.tu-berlin.de details specific usage examples, refer package documentation vignettes available. Happy analyzing MATSim R!","code":""},{"path":"https://vsp.berlin/matsim-r/articles/Namings.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Namings","text":"function names created following pattern. start specific verb (e.g. read, plot, process) describes main function. sorted [function types] according usage. , following naming elements followed underscore. second element optional. specifies type action performed can used distinguish similar functions. following guide element called [clarification]. example element [compare], used functions compare two data sets. next element specifies data columns used. example column [mainmode] MATSim file [output_trips]. data going sorted filtered can necessary specify . done using []. example function [plot_arrtime_by_act]: plots column [arrtime], contains arrival time, [act] activity. Several can connected using []. last element can used specify output type. important plotting functions specifies type plot.","code":""},{"path":"https://vsp.berlin/matsim-r/articles/Namings.html","id":"template","dir":"Articles","previous_headings":"","what":"Template","title":"Namings","text":"summarize, every naming template looks similar : [function_type]_{clarification}_[data]_{}_{category}_{}_…_{output_type} [function_type]: Describes type function, indicating primary purpose operation. example, “plot” plot functions, “process” data processing functions, “read” functions read data R environment. plot read process {clarification}: part optional provides additional details clarification function’s purpose behavior. helps distinguish similar functions variations function. example, “compare” indicate function performs comparison, “append” indicate function appends data, etc. plotting functions: compare map processing functions: get rename append filter convert [data]: Refers file column function handling manipulating. Examples include “arrtime” (arrival time), “distance” (distance traveled), “mainmode” (main transportation mode). Can read function str(). {}: part optional indicates data filtered grouped specific category factor. serves connector [data] [category] components. {category}: Indicates specific category grouping factor used filter categorize data. Examples include “act” (activity), “spatialcat” (spatial category), “mainmode” (main transportation mode). {}: part optional used connector multiple categories involved function’s operation. {output_type}: Indicates type output result function generates. indicates format form data returned function. Examples include “barchart,” “piechart,” “linechart,” “table”.","code":""},{"path":"https://vsp.berlin/matsim-r/articles/Namings.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Namings","text":"plot: Indicates function used plot data. arrtime: Refers “Arrival Time,” key aspect visualized. by_act: Indicates plot grouped “Activity.” plot: Indicates function used plot data. compare_count: Refers comparing count trips. by_spatialcat: Indicates comparison based “Spatial Categories.” barchart: Specifies type plot used visualization. plot: Indicates function used plot data. compare_distcat: Refers comparing distribution trips based “Distance Categories.” by_mainmode: Indicates comparison based different “Main Modes.” barchart: Specifies type plot used visualization. plot: Indicates function used plot data. compare_mainmode: Refers comparing different “Main Modes.” barchart: Specifies type plot used visualization. plot: Indicates function used plot data. compare_mainmode: Refers comparing different “Main Modes.” sankey: Specifies type plot used visualization, “Sankey Diagram.” plot: Indicates function used plot data. compare_travelwaittime: Refers comparing “Travel Time” “Wait Time.” by_mainmode: Indicates comparison based different “Main Modes.” plot: Indicates function used plot data. compare_travelwaittime: Refers comparing “Travel Time” “Wait Time.” by_mainmode: Indicates comparison based different “Main Modes.” barchart: Specifies type plot used visualization. plot: Indicates function used plot data. deptime: Refers “Departure Time,” key aspect visualized. by_act: Indicates plot segmented grouped “Activity.” plot: Indicates function used plot data. distance: Refers “Distance,” key aspect visualized. by_mainmode: Indicates plot segmented grouped different “Main Modes.” barchart: Specifies type plot used visualization. plot: Indicates function used plot data. distance: Refers “Distance,” key aspect visualized. by_spatialcat: Indicates plot segmented grouped “Spatial Categories.” barchart: Specifies type plot used visualization. plot: Indicates function used plot data. distcat: Refers “Distance Categories,” key aspect visualized. by_mainmode: Indicates plot segmented grouped different “Main Modes.” barchart: Specifies type plot used visualization. plot: Indicates function used plot data. mainmode: Refers “Main Modes,” key aspect visualized. barchart: Specifies type plot used visualization. plot: Indicates function used plot data. mainmode: Refers “Main Modes,” key aspect visualized. piechart: Specifies type plot used visualization. plot: Indicates function used plot data. map_trips: Refers “Mapping Trips,” key aspect visualized. process: Indicates function used process data. append_distcat: Refers appending “Distance Categories” trips_table. process: Indicates function used process data. append_spatialcat: Refers appending “Spatial Categories” trips_table. process: Indicates function used process data. convert_table_to_sf: Refers converting trips_table spatial data frame (sf). process: Indicates function used process data. convert_time: Refers converting time data trips_table specified format. process: Indicates function used process data. filter_by_shape: Refers filtering trips trips_table based shape.","code":""},{"path":"https://vsp.berlin/matsim-r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Billy Charlton. Author, maintainer. Oleksandr Soboliev. Author. Johanna Bänsch. Author.","code":""},{"path":"https://vsp.berlin/matsim-r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Charlton B, Soboliev O, Bänsch J (2024). matsim: R library interfacing MATSim agent-based microsimulation model. R package version 0.2.0, https://github.com/matsim-vsp/matsim-r.","code":"@Manual{,   title = {matsim: R library for interfacing with MATSim agent-based microsimulation model},   author = {Billy Charlton and Oleksandr Soboliev and Johanna Bänsch},   year = {2024},   note = {R package version 0.2.0},   url = {https://github.com/matsim-vsp/matsim-r}, }"},{"path":"https://vsp.berlin/matsim-r/index.html","id":"matsim-r-support-package","dir":"","previous_headings":"","what":"R library for interfacing with MATSim agent-based microsimulation model","title":"R library for interfacing with MATSim agent-based microsimulation model","text":"MATSim agent-based microsimulation package large-scale transport simulations. ’s free software terms GNU General Public License. user guide MATSim can found information regarding license . package mimics functionality Python matsim-tools package, eventually support standard MATSim networks, plans events. Currently network files well many summarization plots based MATSim standard output_trips file, counts file output_persons file supported. work preliminary ongoing – submissions welcome!","code":""},{"path":"https://vsp.berlin/matsim-r/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"R library for interfacing with MATSim agent-based microsimulation model","text":"can install package right now: install.packages(\"devtools\") devtools::install_github(\"matsim-vsp/matsim-r\", build_vignettes = TRUE) install package specific branch use: devtools::install_github(\"matsim-vsp/matsim-r\",ref=\"{name branch}\", build_vignettes = TRUE)","code":""},{"path":"https://vsp.berlin/matsim-r/index.html","id":"installing-from-gz-archive","dir":"","previous_headings":"Install","what":"Installing from .gz archive","title":"R library for interfacing with MATSim agent-based microsimulation model","text":"Instead using devtools can also install directly source archive: install.packages(\"matsim-r.tar.gz\", type=\"source\", repos=NULL)","code":""},{"path":"https://vsp.berlin/matsim-r/index.html","id":"documentation-build-instructions","dir":"","previous_headings":"","what":"Documentation build instructions","title":"R library for interfacing with MATSim agent-based microsimulation model","text":"Run GNU Make build docs whenever source files R/ change. create man pages well fancy HTML docs/ folder , build : devtools::document() builds docs NAMESPACE pkgdown::build_site() builds HTML docs","code":""},{"path":"https://vsp.berlin/matsim-r/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"R library for interfacing with MATSim agent-based microsimulation model","text":"package includes several vignettes containing short guides examples. access make sure build vignettes installation process using build_vignettes=TRUE. browseVignettes(package = \"matsim\") open list currently available vignettes.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/generateXYHexagonYaml.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates/adds XY hexagon definition of output trips to a summary dashboard — generateXYHexagonYaml","title":"Creates/adds XY hexagon definition of output trips to a summary dashboard — generateXYHexagonYaml","text":"Creates/adds XY hexagon definition output trips summary dashboard","code":""},{"path":"https://vsp.berlin/matsim-r/reference/generateXYHexagonYaml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates/adds XY hexagon definition of output trips to a summary dashboard — generateXYHexagonYaml","text":"","code":"generateXYHexagonYaml(   pathToOutputTrips,   crs,   dump.output.to = matsimDumpOutputDirectory )"},{"path":"https://vsp.berlin/matsim-r/reference/generateXYHexagonYaml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates/adds XY hexagon definition of output trips to a summary dashboard — generateXYHexagonYaml","text":"pathToOutputTrips file path output_trips.csv file crs specifies coordinate reference system output_trips dump.output.path folder simwrapper dashboard","code":""},{"path":"https://vsp.berlin/matsim-r/reference/generateXYHexagonYaml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates/adds XY hexagon definition of output trips to a summary dashboard — generateXYHexagonYaml","text":"changed file","code":""},{"path":"https://vsp.berlin/matsim-r/reference/matsimr-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated Function — readCounts","title":"Deprecated Function — readCounts","text":"readCounts - Loads MATSim Counts XML-file tibble memory loadNetwork - Loads MATSim XML network file, creating nodes tibble links tibble. node link attribute records network stored additional columns respective node link tibbles. links table automatically joined nodes table node x/y coordinates (node attributes) available links table without additional processing. readPersonsTable - Loads MATSim CSV output_persons file archive, creating tibble columns csv file copied + adopted code readTripsTable tripsOutput.R boxplotScoreDifferences - function generates boxplot compare score differences two sets data represented personTibble_base personTibble_policy tibbles. provides insights distribution score differences two sets data. functions provided compatibility older version matsimr package.  may eventually completely removed.plotModalSplitPieChart - Takes Table trips_output (read_output_trips), plot pie chart values represent percentage using transport modes trips plotModalSplitBarChart - Takes Table trips_output (read_output_trips), plot bar chart values represent percentage using transport modes trips readTripsTable - Loads MATSim output_trips file file archive path, creating tibble plotAverageTravelWait - Takes Table trips_output (read_output_trips), plot bar chart values represent time spent traveling/waiting Using parameters unite.columns, specific columns given, unite 1 mode name united_name(default 'united') plotModalDistanceDistribution - Takes Table trips_output (read_output_trips), plot bar chart values represent number trips ~ distance travelled Using parameters unite.columns, specific columns given, unite 1 mode name united_name(default 'united') compareModalDistanceDistribution - Takes 2 Tables trips_output (read_output_trips), plot bar chart values represent difference number trips tripsTable2 tripsTable1 ~ distance travelled Using parameters unite.columns, specific columns given, unite 1 mode name united_name(default 'united') plotTripDistanceByMode - Takes Table trips_output (read_output_trips), plot bar chart values represent average distance traveled ~ main mode used Using parameters unite.columns, specific columns given, unite 1 mode name united_name(default 'united') plotTripCountByDepTime - Takes Table trips_output (read_output_trips), make line plot values represent count trips specific departure time main_mode Using parameters unite.columns, specific columns given, unite 1 mode name united_name(default 'united') plotActivityEndTimes - Takes Table trips_output (read_output_trips), make line plot values represent number activities ending specific time. Using parameters unite.columns, specific columns given, unite 1 mode name united_name(default 'united') plotArrivalTimesPerTripPurpose - Takes Table trips_output (read_output_trips), make line plot values represent count destination activities specific arrival time Using parameters unite.columns, specific columns given, unite 1 mode name united_name(default 'united') plotDepartureTimesPerTripPurpose - Takes Table trips_output (read_output_trips), make line plot values represent count destination activities specific arrival time Using parameters unite.columns, specific columns given, unite 1 mode name united_name(default 'united') plotTripDistancedByType - Takes Table trips_output (read_output_trips), plot bar chart values represent travelled distance tripType related shapeTable plotModalShiftSankey - Takes two trips_table (read_output_trips), collects changes transport mode distribution tables make alluvial diagram data Function calculates number transport mode used first second table, draws plot represent distribution transport mode changed (f. e. part concrete trasport mode changed another) Using parameter unite.columns transport modes match PATTERN unite.columns can united 1 transport mode type (default united_name \"united\") Using parameter show.onlyChanges plotModalShiftBar - Takes two trips_table (read_output_trips), collects changes transport mode distribution tables make bar chart diagram dodging positioning data Function calculates number transport mode used first second table, draws plot represent distribution transport mode changed (f. e. part concrete trasport mode changed another) Using parameter unite.columns transport modes match PATTERN unite.columns can united 1 transport mode type (default united_name \"united\") Using parameter show.onlyChanges plotMapWithFilteredTrips - Takes trips_table shapeTable(sf object file representing geographical data, can received using function st_read(path_to_file)) transforms objects match mutual CRS(network.xml MATSimOutputDirectory) filters trips table depending *.inshape flags: start.inshape = TRUE & end.inshape = TRUE return table contains trips inside given shape  start.inshape = TRUE & end.inshape = FALSE return table contains trips starts shape ends shape  start.inshape = FALSE & end.inshape = TRUE return table contains trips ends shape starts shape  start.inshape = FALSE & end.inshape = FALSE return table contains trips starts ends given shape  result filtering plotted map shapeTable green points startpoints trip red points endpoints trip plotMapWithTrips - Plots start end coordinates given trips table osm map plotTripTypesPieChart - plots distribution every type trips(inside, outside, origin destinating) Pie Chart compareTripTypesBarChart - Creates BarChart changing trip types(originating,transit etc) 2 tables saves output dump.output.plotMapWithTripsType - plots every type trips(inside, outside, origin destinating) map compareBasePolicyOutput - Chooses function compare output_trips folders. baseFolder contains base outputs, policyFolder contains policy outputs. compareBasePolicyShapeOutput - Chooses function compare output_trips folders. baseFolder contains base outputs, policyFolder contains policy outputs. appendDistanceCategory - adds trips output tibble additional column represent distance category filterByRegion - Filtering trips_table(read_output_trips) depending located given shape Takes trips_table shapeTable(sf object file representing geographical data, can received using function st_read(path_to_file). Please aware filterByRegion currently works, one geometry loaded.) transforms objects match mutual CRS(network.xml MATSimOutputDirectory) filters trips table depending *.inshape flags:  start.inshape = TRUE & end.inshape = TRUE return table contains trips inside given shape start.inshape = TRUE & end.inshape = FALSE return table contains trips starts shape ends shape start.inshape = FALSE & end.inshape = TRUE return table contains trips ends shape starts shape start.inshape = FALSE & end.inshape = FALSE return table contains trips starts ends given shape deriveODMatrix - Creates instance ODMatrix(origin/destination) conventional form simwrapper getCrsFromConfig - Reads coordinate reference system MATSim output directory output_config.xml transformToSf - Transforms trips_table tibble (read_output_trips) tibble sf (table attribute features geometry feature) Takes trips_table (read_output_trips) transforms trips_table sf object using start_x, end_x, start_y, end_y geometry features deletes resulting data.frame start_x, end_x, start_y, end_y. adds wkt column, geometry.type = st_mulitpoint(), geometry.type = st_linestring() adds start_wkt end_wkt, geometry.type = st_point() Added column/columns projected given CRS (coordinate reference system), can taken network file MATSimOutputDirectory Function also sets attribute geometry.type resulting table character value \"POINT\",\"MULTIPOINT\",\"LINESTRING\" get type table generated, needed Takes Table trips_output (readTripsTable()), plot scatter plot values represent count start activities specific departure time main_mode Using parameters unite.columns, specific columns given, unite 1 mode name united.name(default 'united')","code":""},{"path":"https://vsp.berlin/matsim-r/reference/matsimr-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated Function — readCounts","text":"","code":"readCounts(file)  loadNetwork(filename)  readPersonsTable(input_path = \".\", n_max = Inf)  boxplotScoreDifferences(personTibble_base, personTibble_policy)  plotModalSplitPieChart(   tripsTable,   unite.columns = character(0),   united.name = \"united\",   dump.output.to = matsimDumpOutputDirectory,   only.files = FALSE )  plotModalSplitBarChart(   tripsTable,   unite.columns = character(0),   united.name = \"united\",   dump.output.to = matsimDumpOutputDirectory,   only.files = FALSE )  readTripsTable(input_path = \".\", n_max = Inf)  plotAverageTravelWait(   tripsTable,   unite.columns = character(0),   united.name = \"united\",   dump.output.to = matsimDumpOutputDirectory,   only.files = FALSE )  compareAverageTravelWait(   tripsTable1,   tripsTable2,   unite.columns = character(0),   united.name = \"united\",   dump.output.to = matsimDumpOutputDirectory,   only.files = FALSE )  plotModalDistanceDistribution(   tripsTable,   unite.columns = character(0),   united.name = \"united\",   dump.output.to = matsimDumpOutputDirectory,   only.files = FALSE )  compareModalDistanceDistribution(   tripsTable1,   tripsTable2,   unite.columns = character(0),   united.name = \"united\",   dump.output.to = matsimDumpOutputDirectory,   only.files = FALSE )  plotTripDistanceByMode(   tripsTable,   unite.columns = character(0),   united.name = \"united\",   dump.output.to = matsimDumpOutputDirectory,   only.files = FALSE )  plotTripCountByDepTime(   tripsTable,   unite.columns = character(0),   united.name = \"united\",   dump.output.to = matsimDumpOutputDirectory,   only.files = FALSE )  plotActivityEndTimes(   tripsTable,   unite.columns = character(0),   united.name = \"united\",   dump.output.to = matsimDumpOutputDirectory,   only.files = FALSE )  plotArrivalTimesPerTripPurpose(   tripsTable,   unite.columns = character(0),   united.name = \"united\",   dump.output.to = matsimDumpOutputDirectory,   only.files = FALSE )  plotDepartureTimesPerTripPurpose(   tripsTable,   unite.columns = character(0),   united.name = \"united\",   dump.output.to = matsimDumpOutputDirectory,   only.files = FALSE )  plotTripDistancedByType(   tripsTable,   shapeTable,   crs,   dump.output.to = matsimDumpOutputDirectory )  plotModalShiftSankey(   tripsTable1,   tripsTable2,   show.onlyChanges = FALSE,   unite.columns = character(0),   united.name = \"united\",   dump.output.to = matsimDumpOutputDirectory )  plotModalShiftBar(   tripsTable1,   tripsTable2,   unite.columns = character(0),   united.name = \"united\",   dump.output.to = matsimDumpOutputDirectory,   output.name = \"modalShiftBarChart\" )  plotMapWithFilteredTrips(   table,   shapeTable,   crs,   start.inshape = TRUE,   end.inshape = TRUE,   optimized = FALSE )  plotMapWithTrips(table, crs, optimized = FALSE)  plotTripTypesPieChart(table, shapeTable, crs)  compareTripTypesBarChart(   tripsTable1,   tripsTable2,   shapeTable,   crs,   dump.output.to = matsimDumpOutputDirectory )  plotMapWithTripsType(table, shapeTable, crs, optimized = FALSE)  compareBasePolicyOutput(   baseFolder,   policyFolder,   dump.output.to = matsimDumpOutputDirectory )  compareBasePolicyShapeOutput(   baseFolder,   policyFolder,   shapeFilePath,   crs,   dump.output.to = matsimDumpOutputDirectory )  appendDistanceCategory(tripsTable)  filterByRegion(   tripsTable,   shapeTable,   crs,   start.inshape = TRUE,   end.inshape = TRUE )  deriveODMatrix(   tripsTable,   shapePath,   crs,   dump.output.to = matsimDumpOutputDirectory,   simwrapper = FALSE,   colnames = \"numeric\",   outer = FALSE )  getCrsFromConfig(folder)  transformToSf(table, crs, geometry.type = st_multipoint())  plotStartActCountByDepTime(   tripsTable,   unite.columns = character(0),   united.name = \"united\",   dump.output.to = matsimDumpOutputDirectory,   only.files = FALSE )"},{"path":"https://vsp.berlin/matsim-r/reference/matsimr-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated Function — readCounts","text":"file File load. Must .xml file filename File load. Can XML gzipped XML input_path character string, path MATSim output directory http link file. n_max integer, maximum number lines read within output_trips personTibble_base persons tibble base case, can loaded readPersonsTable. personTibble_policy persons tibble policy case, can loaded readPersonsTable. tripsTable tible trips_output (readTripsTable()) unite.columns vector character strings, represent patterns columns united, changes name transport modes tibble copy united.name = \"united\" matches PATTERNS given unite.columns united.name character string, columns united, can specify name resulting column chart dump.output.folder saves configures yaml simwrapper dashboard. folder png plot stored .files boolean, represent plotting inside project needed, default FALSE - means function gives plot plot_ly tripsTable1 tibble trips_output (read_output_trips,f.e. base case) tripsTable2 tibble trips_output (read_output_trips,f.e. policy case) shapeTable sf object(data.frame geometries), can received using st_read(path_to_geographical_file) crs numeric EPSG code proj4string, can found network file output directory MATSim simulation show.onlyChanges boolean, set TRUE => sankey diagram contains changes axes output.name test table tibble trips_output (read_output_trips) start.inshape bool, defines trips conclude (see Description) end.inshape bool, defines trips conclude (see Description) optimized bool, default FALSE gives interactive plot using leaflet, TRUE using image ggplot baseFolder specifies data source folder multiple base output_trips policyFolder specifies data source folder multiple policy output_trips shapeFilePath specifies shapeFile used comparison shapePath full path shapefile (simwrapper TRUE, folder shapeFile contain also .dbf name) simwrapper create output simwrapper form set path shapefile colnames specific shapefile contains known columns, specified name columns OD. given get numeric values outer logical represent table contain outside flow shape, folder specifies path find config geometry.type function sf transformation, geometry.type can (default st_multipoint()) !!!st_point()-resulting table contains 2 geometries start_wkt end_wkt, representing start end POINTs, type POINT!!!   !!!st_multipoint()-resulting table contains 1 geometry wkt, representing start end POINTS MULTIPOINT!!!  !!!st_linestring() - resulting table contains 1 geometry wkt, representing line start end points LINESTRING!!!","code":""},{"path":"https://vsp.berlin/matsim-r/reference/matsimr-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated Function — readCounts","text":"readCounts - tibble MATSim link id (\"loc_id\") key loadNetwork - \"nodes\" \"links\" tibbles list object. readPersonsTable - tibble output_persons boxplotScoreDifferences - ggplot boxplot distribution score differences plotModalSplitPieChart - Pie Chart plot transport mode distribution, values given percents plotModalSplitBarChart - Bar Chart plot transport mode distribution, values given percents readTripsTable - tibble output_trips plotAverageTravelWait - Bar Chart plot average time spent travel/wait plotModalDistanceDistribution Bar Chart plot count trips among distance travelled compareModalDistanceDistribution - Bar Chart plot count trips among distance travelled plotTripDistanceByMode - Bar Chart plot distance traveled per mode plotTripCountByDepTime - Line Chart plot trips count departure mode per mode plotActivityEndTimes Line plot departure time x-axis number start activities y-axis plotArrivalTimesPerTripPurpose - Line plot arrival time x-axis number end activities y-axis plotDepartureTimesPerTripPurpose -  Line plot arrival time x-axis number end activities y-axis plotTripDistancedByType - Bar Chart plot distance traveled type plotModalShiftSankey - Alluvial diagram represents changes transport mode distribution trip tables plotModalShiftBar - plots Bar Chart transport mode changes additional files simwrapper plotMapWithFilteredTrips - plot trips filtered depending flags *.inshape map shapeTable plotMapWithTrips - plot trips plotTripTypesPieChart - plot percentage type trips compareTripTypesBarChart - plot percentage type trips 2 tables plotMapWithTripsType - plot contains every trip defined trip type compareBasePolicyOutput - list tibbles, list base policy output_trips tibble compareBasePolicyShapeOutput - list tibbles, list base policy output_trips tibble tibble output_trips distance category column filterByRegion - tibble, filtered trips depending shapeTable special flags (see Description) deriveODMatrix - tibble origin/destination matrix getCrsFromConfig - code coordinate reference system transformToSf - sf object (data.frame geometries depending geometry.type) Bar Chart plot distance traveled per mode","code":""},{"path":"https://vsp.berlin/matsim-r/reference/matsimr-deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deprecated Function — readCounts","text":"plotModalSplitPieChart now synonym plot_mainmode_piechartplotModalSplitBarChart now synonym plot_mainmode_barchartplotAverageTravelWait now synonym plot_travelwaittime_mean_barchartplotModalDistanceDistribution now synonym plot_distcat_by_mainmode_barchartplotTripDistanceByMode now synonym plot_distance_by_mainmode_barchartplotTripCountByDepTime now synonym plot_trips_count_by_deptime_and_mainmode_linechartplotActivityEndTimes part package(contained false logic)plotArrivalTimesPerTripPurposenow synonym plot_arrtime_by_actplotDepartureTimesPerTripPurpose now synonym plot_deptime_by_actplotTripTypesPieChart now synonym plot_spatialtype_by_shape_piechartplotMapWithFilteredTripsnot part package, can filter drawing mapplotMapWithTripsnow synonym plot_map_tripsplotMapWithTripsType now synonym plot_map_trips_by_spatialcatplotTripDistancedByType now synonym plot_distance_by_spatialcat_barchartplotModalShiftBar now synonym plot_compare_mainmode_barchartplotModalShiftSankey now synonym plot_compare_mainmode_sankeycompareAverageTravelWait now synonym plot_compare_travelwaittime_by_mainmode_barchartcompareTripTypesBarChartnow synonym plot_compare_count_by_spatialcat_barchartcompareModalDistanceDistribution  now synonym plot_compare_distcat_by_mainmode_barchartcompareBasePolicyOutput used new package version, prepared completely removed package   like keep new package, write soboliev@campus.tu-berlin.decompareBasePolicyShapeOutput used new package version, prepared completely removed package   like keep new package, write soboliev@campus.tu-berlin.deappendDistanceCategorynow synonym process_append_distcatfilterByRegion now synonym process_filter_by_shapederiveODMatrix now synonym process_get_od_matrixgetCrsFromConfignow synonym process_get_crs_from_configtransformToSf now synonym process_convert_table_to_sfreadTripsTablenow synonym read_output_tripsreadConfig now synonym read_config","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_arrtime_by_act.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a line plot of arrival time by activity — plot_arrtime_by_act","title":"Create a line plot of arrival time by activity — plot_arrtime_by_act","text":"Takes tibble created read_output_trips create line plot count destination activities specific arrival time Using parameter unite_activities, specific activities can renamed one name specified united_name (default 'united')","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_arrtime_by_act.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a line plot of arrival time by activity — plot_arrtime_by_act","text":"","code":"plot_arrtime_by_act(   trips_table,   unite_activities = character(0),   united_name = \"united\" )"},{"path":"https://vsp.berlin/matsim-r/reference/plot_arrtime_by_act.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a line plot of arrival time by activity — plot_arrtime_by_act","text":"trips_table tibble trips_output (read_output_trips) unite_activities optional, vector character strings, changes names chosen categories new specified name (.e. school university education) united_name optional, character string, specifies new name united activities","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_arrtime_by_act.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a line plot of arrival time by activity — plot_arrtime_by_act","text":"plotly object representing line plot arrival time activity.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_count_by_spatialcat_barchart.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot comparison bar chart of count by spatial category — plot_compare_count_by_spatialcat_barchart","title":"Plot comparison bar chart of count by spatial category — plot_compare_count_by_spatialcat_barchart","text":"Takes two tibbles read_output_trips generate bar chart comparing number trips across different spatial categories.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_count_by_spatialcat_barchart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot comparison bar chart of count by spatial category — plot_compare_count_by_spatialcat_barchart","text":"","code":"plot_compare_count_by_spatialcat_barchart(   trips_table1,   trips_table2,   shape_table,   crs )"},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_count_by_spatialcat_barchart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot comparison bar chart of count by spatial category — plot_compare_count_by_spatialcat_barchart","text":"trips_table1 tibble trips_output (read_output_trips) trips_table2 tibble trips_output (read_output_trips) shape_table sf object(data frame geometries), can created using st_read(), used categorize trips. crs numeric representation EPSG code proj4string corresponding coordinate system trip coordinates, can found network file output directory MATSim simulation","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_count_by_spatialcat_barchart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot comparison bar chart of count by spatial category — plot_compare_count_by_spatialcat_barchart","text":"Bar chart comparing number trips spatial category.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_distcat_by_mainmode_barchart.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a bar chart comparing distance traveled on x-axis and number of trips on y-axis for two different runs\nTakes two tibbles from read_output_trips, categorizes the traveled distances into pre-defined bins\nand plots the difference in number of trips for each bin. (Bins: 1000,2000,5000,10000,20000,50000,100000 (m))\nUsing the parameter unite_modes, specific modes can be renamed into one with the name specified with united_name (by default 'united') — plot_compare_distcat_by_mainmode_barchart","title":"Create a bar chart comparing distance traveled on x-axis and number of trips on y-axis for two different runs\nTakes two tibbles from read_output_trips, categorizes the traveled distances into pre-defined bins\nand plots the difference in number of trips for each bin. (Bins: 1000,2000,5000,10000,20000,50000,100000 (m))\nUsing the parameter unite_modes, specific modes can be renamed into one with the name specified with united_name (by default 'united') — plot_compare_distcat_by_mainmode_barchart","text":"Create bar chart comparing distance traveled x-axis number trips y-axis two different runs Takes two tibbles read_output_trips, categorizes traveled distances pre-defined bins plots difference number trips bin. (Bins: 1000,2000,5000,10000,20000,50000,100000 (m)) Using parameter unite_modes, specific modes can renamed one name specified united_name (default 'united')","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_distcat_by_mainmode_barchart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a bar chart comparing distance traveled on x-axis and number of trips on y-axis for two different runs\nTakes two tibbles from read_output_trips, categorizes the traveled distances into pre-defined bins\nand plots the difference in number of trips for each bin. (Bins: 1000,2000,5000,10000,20000,50000,100000 (m))\nUsing the parameter unite_modes, specific modes can be renamed into one with the name specified with united_name (by default 'united') — plot_compare_distcat_by_mainmode_barchart","text":"","code":"plot_compare_distcat_by_mainmode_barchart(   trips_table1,   trips_table2,   unite_modes = character(0),   united_name = \"united\",   dist_column = \"dist_cat\",   distances_array = c(1000, 2000, 5000, 10000, 20000, 50000, 1e+05) )"},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_distcat_by_mainmode_barchart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a bar chart comparing distance traveled on x-axis and number of trips on y-axis for two different runs\nTakes two tibbles from read_output_trips, categorizes the traveled distances into pre-defined bins\nand plots the difference in number of trips for each bin. (Bins: 1000,2000,5000,10000,20000,50000,100000 (m))\nUsing the parameter unite_modes, specific modes can be renamed into one with the name specified with united_name (by default 'united') — plot_compare_distcat_by_mainmode_barchart","text":"trips_table1 tibble trips_output (read_output_trips), number trips table extracted number trips trips_table1 trips_table2 tibble trips_output (read_output_trips), number trips table number trips trips_table1 extracted unite_modes optional, vector character strings, changes names chosen modes column main_mode new chosen name (.e. drtNorth drtSouth drt), using function (process_rename_mainmodes) united_name optional, character string, specifies name united mode dist_column character string specifying column name trips_table tibble contains distance categories. distances_array numeric vector defining distance thresholds creating distance categories.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_distcat_by_mainmode_barchart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a bar chart comparing distance traveled on x-axis and number of trips on y-axis for two different runs\nTakes two tibbles from read_output_trips, categorizes the traveled distances into pre-defined bins\nand plots the difference in number of trips for each bin. (Bins: 1000,2000,5000,10000,20000,50000,100000 (m))\nUsing the parameter unite_modes, specific modes can be renamed into one with the name specified with united_name (by default 'united') — plot_compare_distcat_by_mainmode_barchart","text":"Bar chart plot count trips distance traveled","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_mainmode_barchart.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot bar chart of changes in modal split — plot_compare_mainmode_barchart","title":"Plot bar chart of changes in modal split — plot_compare_mainmode_barchart","text":"Takes two tibbles read_output_trips, calculates changes mode shares plots bar chart Using parameter unite_modes, specific modes can renamed one name specified united_name (default 'united')","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_mainmode_barchart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot bar chart of changes in modal split — plot_compare_mainmode_barchart","text":"","code":"plot_compare_mainmode_barchart(   trips_table1,   trips_table2,   unite_modes = character(0),   united_name = \"united\" )"},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_mainmode_barchart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot bar chart of changes in modal split — plot_compare_mainmode_barchart","text":"trips_table1 tibble trips_output (read_output_trips) trips_table2 tibble trips_output (read_output_trips) unite_modes optional, vector character strings, changes names chosen modes column main_mode new chosen name (.e. drtNorth drtSouth drt), using function (process_rename_mainmodes) united_name optional, character string, specifies name united mode","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_mainmode_barchart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot bar chart of changes in modal split — plot_compare_mainmode_barchart","text":"Bar chart changes modal split","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_mainmode_sankey.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot alluvial/sankey diagram of transport mode changes — plot_compare_mainmode_sankey","title":"Plot alluvial/sankey diagram of transport mode changes — plot_compare_mainmode_sankey","text":"Takes two tibbles read_output_trips compares mode choice agent summarizes results, showing modal shift. Using parameter unite_modes, specific modes can renamed one name specified united_name (default 'united') parameter show.onlyChanges allows visualization mode shift (excluding trips change mode). Standard value FALSE.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_mainmode_sankey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot alluvial/sankey diagram of transport mode changes — plot_compare_mainmode_sankey","text":"","code":"plot_compare_mainmode_sankey(   trips_table1,   trips_table2,   show_onlychanges = FALSE,   unite_modes = character(0),   united_name = \"united\" )"},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_mainmode_sankey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot alluvial/sankey diagram of transport mode changes — plot_compare_mainmode_sankey","text":"trips_table1 tibble trips_output (read_output_trips()) trips_table2 tibble trips_output (read_output_trips()) show_onlychanges boolean, set TRUE sankey diagram shows mode shift unite_modes optional, vector character strings, changes names chosen modes column main_mode new chosen name (.e. drtNorth drtSouth drt), using function (process_rename_mainmodes) united_name optional, character string, specifies name united mode","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_mainmode_sankey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot alluvial/sankey diagram of transport mode changes — plot_compare_mainmode_sankey","text":"Alluvial diagram represents changes transport mode distribution","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_score_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a boxplot of score differences — plot_compare_score_boxplot","title":"Create a boxplot of score differences — plot_compare_score_boxplot","text":"Takes two tibbles created read_output_persons calculate score difference create boxplot.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_score_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a boxplot of score differences — plot_compare_score_boxplot","text":"","code":"plot_compare_score_boxplot(person_tibble1, person_tibble2)"},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_score_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a boxplot of score differences — plot_compare_score_boxplot","text":"person_tibble1 persons tibble base case, can loaded read_output_persons. person_tibble2 persons tibble policy case, can loaded read_output_persons.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_score_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a boxplot of score differences — plot_compare_score_boxplot","text":"ggplot boxplot distribution score differences","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_travelwaittime_by_mainmode.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates comparison bar chart with main_mode on x-axis and average travel/wait time on y-axis — plot_compare_travelwaittime_by_mainmode","title":"Creates comparison bar chart with main_mode on x-axis and average travel/wait time on y-axis — plot_compare_travelwaittime_by_mainmode","text":"Takes two tibbles read_output_trips plot comparison bar chart travel wait times. Using parameter unite_modes, specific modes can renamed one name specified united_name (default 'united')","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_travelwaittime_by_mainmode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates comparison bar chart with main_mode on x-axis and average travel/wait time on y-axis — plot_compare_travelwaittime_by_mainmode","text":"","code":"plot_compare_travelwaittime_by_mainmode(   trips_table1,   trips_table2,   unite_modes = character(0),   united_name = \"united\",   time_format = \"minute\" )"},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_travelwaittime_by_mainmode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates comparison bar chart with main_mode on x-axis and average travel/wait time on y-axis — plot_compare_travelwaittime_by_mainmode","text":"trips_table1 tibble trips_output (read_output_trips) trips_table2 tibble trips_output (read_output_trips) unite_modes optional, vector character strings, changes names chosen modes column main_mode new chosen name (.e. drtNorth drtSouth drt), using function (process_rename_mainmodes) united_name optional, character string, specifies name united mode time_format character string, indicating desired time format output. options \"minute\", \"hour\", \"second\". default \"minute\".","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_travelwaittime_by_mainmode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates comparison bar chart with main_mode on x-axis and average travel/wait time on y-axis — plot_compare_travelwaittime_by_mainmode","text":"Bar chart plot comparing average time spent travel/wait two runs","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_travelwaittime_by_mainmode_barchart.html","id":null,"dir":"Reference","previous_headings":"","what":"Create comparison bar chart with main_mode on x-axis and average travel/wait time on y-axis — plot_compare_travelwaittime_by_mainmode_barchart","title":"Create comparison bar chart with main_mode on x-axis and average travel/wait time on y-axis — plot_compare_travelwaittime_by_mainmode_barchart","text":"Takes two tibbles read_output_trips, plot comparison bar chart traveling/waiting time. Using parameter unite_modes, specific modes can renamed one name specified united_name (default 'united')","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_travelwaittime_by_mainmode_barchart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create comparison bar chart with main_mode on x-axis and average travel/wait time on y-axis — plot_compare_travelwaittime_by_mainmode_barchart","text":"","code":"plot_compare_travelwaittime_by_mainmode_barchart(   trips_table1,   trips_table2,   unite_modes = character(0),   united_name = \"united\",   time_format = \"minute\" )"},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_travelwaittime_by_mainmode_barchart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create comparison bar chart with main_mode on x-axis and average travel/wait time on y-axis — plot_compare_travelwaittime_by_mainmode_barchart","text":"trips_table1 tibble trips_output (read_output_trips) trips_table2 tibble trips_output (read_output_trips) unite_modes optional, vector character strings, changes names chosen modes column main_mode new chosen name (.e. drtNorth drtSouth drt), using function (process_rename_mainmodes) united_name optional, character string, specifies name united mode time_format character string, indicating desired time format output. options \"minute\", \"hour\", \"second\". default \"minute\".","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_compare_travelwaittime_by_mainmode_barchart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create comparison bar chart with main_mode on x-axis and average travel/wait time on y-axis — plot_compare_travelwaittime_by_mainmode_barchart","text":"Bar chart plot average travel/wait time","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_count_scatterplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a Via-Style scatterplot for each run — plot_count_scatterplot","title":"Creates a Via-Style scatterplot for each run — plot_count_scatterplot","text":"Takes tibble process_join_counts_and_links create scatterplot counts x axis MATSim DTV y axis, colored road type. Lower upper limits define section considered 'exact' estimation. Limits defined custom formulas.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_count_scatterplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a Via-Style scatterplot for each run — plot_count_scatterplot","text":"","code":"plot_count_scatterplot(   joined_frame,   ll = ~x * 0.8 - 200,   ul = ~x * 1.2 + 200,   threshold = 100 )"},{"path":"https://vsp.berlin/matsim-r/reference/plot_count_scatterplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a Via-Style scatterplot for each run — plot_count_scatterplot","text":"joined_frame tibble process_join_counts_and_links ll Formula calculate lower limit quality label 'exact', default = 0.8*x - 200 ul Formula calculate lower limit quality label 'exact', default = 1.2*x + 200 threshold Threshold data scaled log10.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_count_scatterplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a Via-Style scatterplot for each run — plot_count_scatterplot","text":"adjustable ggplot scatter plot","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_deptime_by_act.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a line plot of departure time by activity — plot_deptime_by_act","title":"Create a line plot of departure time by activity — plot_deptime_by_act","text":"Takes tibble created read_output_trips create line plot count destination activities specific departure time Using parameter unite_activities, specific activities can renamed one name specified united_name (default 'united')","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_deptime_by_act.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a line plot of departure time by activity — plot_deptime_by_act","text":"","code":"plot_deptime_by_act(   trips_table,   unite_activities = character(0),   united_name = \"united\" )"},{"path":"https://vsp.berlin/matsim-r/reference/plot_deptime_by_act.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a line plot of departure time by activity — plot_deptime_by_act","text":"trips_table tibble trips_output (read_output_trips) unite_activities optional, vector character strings, changes names chosen categories new specified name (.e. school university education) united_name optional, character string, specifies new name united activities","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_deptime_by_act.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a line plot of departure time by activity — plot_deptime_by_act","text":"plotly object representing line plot departure time activity.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_distance_by_mainmode_barchart.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot bar chart with average distance traveled for each mode on x-axis and number of trips on y-axis — plot_distance_by_mainmode_barchart","title":"Plot bar chart with average distance traveled for each mode on x-axis and number of trips on y-axis — plot_distance_by_mainmode_barchart","text":"Takes tibble created read_output_trips plot bar chart average distance traveled main mode, Using parameter unite_modes, specific modes can renamed one name specified united_name (default 'united')","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_distance_by_mainmode_barchart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot bar chart with average distance traveled for each mode on x-axis and number of trips on y-axis — plot_distance_by_mainmode_barchart","text":"","code":"plot_distance_by_mainmode_barchart(   trips_table,   unite_modes = character(0),   united_name = \"united\",   euclidean = FALSE )"},{"path":"https://vsp.berlin/matsim-r/reference/plot_distance_by_mainmode_barchart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot bar chart with average distance traveled for each mode on x-axis and number of trips on y-axis — plot_distance_by_mainmode_barchart","text":"trips_table tibble trips_output (read_output_trips) unite_modes optional, vector character strings, changes names chosen modes column main_mode new chosen name (.e. drtNorth drtSouth drt), using function (process_rename_mainmodes) united_name optional, character string, specifies name united mode euclidean optional, boolean indicating whether calculate average euclidean distance travel distance. Default FALSE, calculates average traveled distance.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_distance_by_mainmode_barchart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot bar chart with average distance traveled for each mode on x-axis and number of trips on y-axis — plot_distance_by_mainmode_barchart","text":"Bar chart plot distance traveled per mode","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_distance_by_spatialcat_barchart.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots a bar chart with spatial type on x-axis and traveled distance on y-axis — plot_distance_by_spatialcat_barchart","title":"Plots a bar chart with spatial type on x-axis and traveled distance on y-axis — plot_distance_by_spatialcat_barchart","text":"Takes tibble created read_output_trips sf object (can created using function st_read()) first use function process_append_spatialcat categorize trips following spatial categories: - inside: trips start end inside given shape - originating: trips start inside shape end outside shape - destinating: trips end inside shape start outside shape - outside: trips start end outside shape","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_distance_by_spatialcat_barchart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots a bar chart with spatial type on x-axis and traveled distance on y-axis — plot_distance_by_spatialcat_barchart","text":"","code":"plot_distance_by_spatialcat_barchart(   trips_table,   shape_table,   crs,   euclidean = FALSE )"},{"path":"https://vsp.berlin/matsim-r/reference/plot_distance_by_spatialcat_barchart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots a bar chart with spatial type on x-axis and traveled distance on y-axis — plot_distance_by_spatialcat_barchart","text":"trips_table tibble trips_output (read_output_trips) shape_table sf object(data frame geometries), can created using st_read(), used categorize trips. crs numeric representation EPSG code proj4string corresponding coordinate system trip coordinates, can found network file output directory MATSim simulation euclidean boolean indicating whether calculate average euclidean distance travel distance. Default FALSE, calculates average traveled distance.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_distance_by_spatialcat_barchart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots a bar chart with spatial type on x-axis and traveled distance on y-axis — plot_distance_by_spatialcat_barchart","text":"Bar chart plot distance traveled spatial type","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_distance_by_spatialcat_barchart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plots a bar chart with spatial type on x-axis and traveled distance on y-axis — plot_distance_by_spatialcat_barchart","text":"next step bar chart sum traveled distance trip type created.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_distcat_by_mainmode_barchart.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot bar chart with distance traveled on x-axis and number of trips on y-axis — plot_distcat_by_mainmode_barchart","title":"Plot bar chart with distance traveled on x-axis and number of trips on y-axis — plot_distcat_by_mainmode_barchart","text":"Takes tibble created read_output_trips categorizes traveled distances pre-defined bins plot histogram traveled distances. (Bins: 1000,2000,5000,10000,20000,50000,100000 (m)) Using parameter unite_modes, specific modes can renamed one name specified united_name (default 'united')","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_distcat_by_mainmode_barchart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot bar chart with distance traveled on x-axis and number of trips on y-axis — plot_distcat_by_mainmode_barchart","text":"","code":"plot_distcat_by_mainmode_barchart(   trips_table,   unite_modes = character(0),   united_name = \"united\",   dist_column = \"dist_cat\",   distances_array = c(1000, 2000, 5000, 10000, 20000, 50000, 1e+05) )"},{"path":"https://vsp.berlin/matsim-r/reference/plot_distcat_by_mainmode_barchart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot bar chart with distance traveled on x-axis and number of trips on y-axis — plot_distcat_by_mainmode_barchart","text":"trips_table tibble trips_output (read_output_trips) unite_modes optional, vector character strings, changes names chosen modes column main_mode new chosen name (.e. drtNorth drtSouth drt), using function (process_rename_mainmodes) united_name optional, character string, specifies name united mode dist_column character string specifying column name trips_table tibble contains distance categories distances_array numeric vector defining distance thresholds creating distance categories","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_distcat_by_mainmode_barchart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot bar chart with distance traveled on x-axis and number of trips on y-axis — plot_distcat_by_mainmode_barchart","text":"Plotly bar Chart count trips among distance traveled","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_mainmode_barchart.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the distribution of modes as a bar chart — plot_mainmode_barchart","title":"Plot the distribution of modes as a bar chart — plot_mainmode_barchart","text":"Takes tibble created read_output_trips plot bar chart modal split using column main_mode.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_mainmode_barchart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the distribution of modes as a bar chart — plot_mainmode_barchart","text":"","code":"plot_mainmode_barchart(   trips_table,   unite_modes = character(0),   united_name = \"united\",   percentage = FALSE )"},{"path":"https://vsp.berlin/matsim-r/reference/plot_mainmode_barchart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the distribution of modes as a bar chart — plot_mainmode_barchart","text":"trips_table tibble trips_output (read_output_trips) unite_modes optional, vector character strings, changes names chosen modes column main_mode new chosen name (.e. drtNorth drtSouth drt), using function (process_rename_mainmodes) united_name optional, character string, specifies name united mode percentage boolean, default FALSE, TRUE output given percentage","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_mainmode_barchart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the distribution of modes as a bar chart — plot_mainmode_barchart","text":"Bar chart plot transport mode distribution, values given either count percent","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_mainmode_barchart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot the distribution of modes as a bar chart — plot_mainmode_barchart","text":"modal shares given percentages. Using parameter unite_modes, specific modes can renamed one name specified united_name (default 'united')","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_mainmode_piechart.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the distribution of modes as a pie chart — plot_mainmode_piechart","title":"Plot the distribution of modes as a pie chart — plot_mainmode_piechart","text":"Takes tibble created read_output_trips plot pie chart modal split using column main_mode.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_mainmode_piechart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the distribution of modes as a pie chart — plot_mainmode_piechart","text":"","code":"plot_mainmode_piechart(   trips_table,   unite_modes = character(0),   united_name = \"united\" )"},{"path":"https://vsp.berlin/matsim-r/reference/plot_mainmode_piechart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the distribution of modes as a pie chart — plot_mainmode_piechart","text":"trips_table tibble trips_output (read_output_trips) unite_modes optional, vector character strings, changes names chosen modes column main_mode new chosen name (.e. drtNorth drtSouth drt), using function (process_rename_mainmodes) united_name optional, character string, specifies name united mode","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_mainmode_piechart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the distribution of modes as a pie chart — plot_mainmode_piechart","text":"pie chart plot transport mode distribution, values given percent","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_mainmode_piechart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot the distribution of modes as a pie chart — plot_mainmode_piechart","text":"function automatically detects modes plots pie chart. Using parameter unite_modes, specific modes can renamed one name specified united_name (default 'united')","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_map_trips.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot start and end coordinates of the given trips table on an osm map — plot_map_trips","title":"Plot start and end coordinates of the given trips table on an osm map — plot_map_trips","text":"Plot start end coordinates given trips table osm map","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_map_trips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot start and end coordinates of the given trips table on an osm map — plot_map_trips","text":"","code":"plot_map_trips(trips_table, crs, optimized = FALSE, shape_table = NULL)"},{"path":"https://vsp.berlin/matsim-r/reference/plot_map_trips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot start and end coordinates of the given trips table on an osm map — plot_map_trips","text":"trips_table tibble trips_output (read_output_trips) crs numeric representation EPSG code proj4string corresponding coordinate system trip coordinates, can found network file output directory MATSim simulation optimized optional, boolean, default FALSE creates interactive plot using leaflet, TRUE uses ggplot shape_table optional, sf object(data frame geometries), can created using st_read(), used categorize trips, used background, default NULL","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_map_trips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot start and end coordinates of the given trips table on an osm map — plot_map_trips","text":"leaflet/ggplot plot trips start-, end- points","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_map_trips_by_spatialcat.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot every spatial trip type (inside, outside, origin and destinating) on map — plot_map_trips_by_spatialcat","title":"Plot every spatial trip type (inside, outside, origin and destinating) on map — plot_map_trips_by_spatialcat","text":"Plot every spatial trip type (inside, outside, origin destinating) map","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_map_trips_by_spatialcat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot every spatial trip type (inside, outside, origin and destinating) on map — plot_map_trips_by_spatialcat","text":"","code":"plot_map_trips_by_spatialcat(trips_table, shape_table, crs, optimized = FALSE)"},{"path":"https://vsp.berlin/matsim-r/reference/plot_map_trips_by_spatialcat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot every spatial trip type (inside, outside, origin and destinating) on map — plot_map_trips_by_spatialcat","text":"trips_table tibble trips_output (read_output_trips) shape_table sf object(data frame geometries), can created using st_read(), used categorize trips. crs numeric representation EPSG code proj4string corresponding coordinate system trip coordinates, can found network file output directory MATSim simulation optimized boolean, default FALSE gives interactive plot using leaflet, TRUE creates image ggplot table tibble output_trips (read_output_trips())","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_map_trips_by_spatialcat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot every spatial trip type (inside, outside, origin and destinating) on map — plot_map_trips_by_spatialcat","text":"plot contains every trip defined trip type","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_spatialtype_by_shape_piechart.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots distribution of trips by spatial type as a pie chart — plot_spatialtype_by_shape_piechart","title":"Plots distribution of trips by spatial type as a pie chart — plot_spatialtype_by_shape_piechart","text":"Takes tibble created read_output_trips sf object (can created using function st_read()) first use function process_append_spatialcat categorize trips following spatial categories: - inside: trips start end inside given shape - originating: trips start inside shape end outside shape - destinating: trips end inside shape start outside shape - outside: trips start end outside shape","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_spatialtype_by_shape_piechart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots distribution of trips by spatial type as a pie chart — plot_spatialtype_by_shape_piechart","text":"","code":"plot_spatialtype_by_shape_piechart(trips_table, shape_table, crs)"},{"path":"https://vsp.berlin/matsim-r/reference/plot_spatialtype_by_shape_piechart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots distribution of trips by spatial type as a pie chart — plot_spatialtype_by_shape_piechart","text":"trips_table tibble trips_output (read_output_trips) shape_table sf object (data frame geometries), can created using st_read(), used categorize trips. crs numeric representation EPSG code proj4string corresponding coordinate system trip coordinates, can found network file output directory MATSim simulation","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_spatialtype_by_shape_piechart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots distribution of trips by spatial type as a pie chart — plot_spatialtype_by_shape_piechart","text":"Pie chart showing percentage type trip","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_spatialtype_by_shape_piechart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plots distribution of trips by spatial type as a pie chart — plot_spatialtype_by_shape_piechart","text":"next step results summarized pie chart.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_travelwaittime_mean_barchart.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot travel and wait time for each mode as a bar chart — plot_travelwaittime_mean_barchart","title":"Plot travel and wait time for each mode as a bar chart — plot_travelwaittime_mean_barchart","text":"Takes tibble created read_output_trips plot bar chart travel wait times. Using parameter unite_modes, specific modes can renamed one name specified united_name (default 'united')","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_travelwaittime_mean_barchart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot travel and wait time for each mode as a bar chart — plot_travelwaittime_mean_barchart","text":"","code":"plot_travelwaittime_mean_barchart(   trips_table,   unite_modes = character(0),   united_name = \"united\",   time_format = \"minute\" )"},{"path":"https://vsp.berlin/matsim-r/reference/plot_travelwaittime_mean_barchart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot travel and wait time for each mode as a bar chart — plot_travelwaittime_mean_barchart","text":"trips_table tibble trips_output (read_output_trips) unite_modes optional, vector character strings, changes names chosen modes column main_mode new chosen name (.e. drtNorth drtSouth drt), using function (process_rename_mainmodes) united_name optional, character string, specifies name united mode time_format character string, indicating desired time format output. options \"minute\", \"hour\", \"second\". default \"minute\".","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_travelwaittime_mean_barchart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot travel and wait time for each mode as a bar chart — plot_travelwaittime_mean_barchart","text":"Bar chart plot average time spent travel/wait","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_trips_count_by_deptime_and_mainmode_linechart.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a line plot with departure time on x-axis and number of trips on y-axis — plot_trips_count_by_deptime_and_mainmode_linechart","title":"Creates a line plot with departure time on x-axis and number of trips on y-axis — plot_trips_count_by_deptime_and_mainmode_linechart","text":"Takes tibble created read_output_trips create line plot number trips specific departure time main_mode Using parameter unite_modes, specific modes can renamed one name specified united_name (default 'united')","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_trips_count_by_deptime_and_mainmode_linechart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a line plot with departure time on x-axis and number of trips on y-axis — plot_trips_count_by_deptime_and_mainmode_linechart","text":"","code":"plot_trips_count_by_deptime_and_mainmode_linechart(   trips_table,   unite_modes = character(0),   united_name = \"united\" )"},{"path":"https://vsp.berlin/matsim-r/reference/plot_trips_count_by_deptime_and_mainmode_linechart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a line plot with departure time on x-axis and number of trips on y-axis — plot_trips_count_by_deptime_and_mainmode_linechart","text":"trips_table tibble trips_output (read_output_trips) unite_modes optional, vector character strings, changes names chosen modes column main_mode new chosen name (.e. drtNorth drtSouth drt), using function (process_rename_mainmodes) united_name optional, character string, specifies name united mode","code":""},{"path":"https://vsp.berlin/matsim-r/reference/plot_trips_count_by_deptime_and_mainmode_linechart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a line plot with departure time on x-axis and number of trips on y-axis — plot_trips_count_by_deptime_and_mainmode_linechart","text":"Line plot trips count departure time per mode","code":""},{"path":"https://vsp.berlin/matsim-r/reference/prepareComparisonSimwrapperDashboardFromTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates comparison dashboard for the two given tables or folders with data — prepareComparisonSimwrapperDashboardFromTable","title":"Creates comparison dashboard for the two given tables or folders with data — prepareComparisonSimwrapperDashboardFromTable","text":"Creates comparison dashboard two given tables folders data","code":""},{"path":"https://vsp.berlin/matsim-r/reference/prepareComparisonSimwrapperDashboardFromTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates comparison dashboard for the two given tables or folders with data — prepareComparisonSimwrapperDashboardFromTable","text":"","code":"prepareComparisonSimwrapperDashboardFromTable(   table1,   table2,   dump.output.to = matsimDumpOutputDirectory,   append = FALSE )"},{"path":"https://vsp.berlin/matsim-r/reference/prepareComparisonSimwrapperDashboardFromTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates comparison dashboard for the two given tables or folders with data — prepareComparisonSimwrapperDashboardFromTable","text":"table1 trips_output tibble readTripsTable() table2 trips_output tibble readTripsTable() dump.output.output folder, yaml files plots following functions saved : plotModalSplitBarChart(),plotModalSplitPieChart(),plotModalShift(). append specifies output folder erased creating, default = FALSE","code":""},{"path":"https://vsp.berlin/matsim-r/reference/prepareComparisonSimwrapperDashboardFromTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates comparison dashboard for the two given tables or folders with data — prepareComparisonSimwrapperDashboardFromTable","text":"generates folder content simwrapper trips table","code":""},{"path":"https://vsp.berlin/matsim-r/reference/prepareSimwrapperDashboardFromFolder.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates dashboard for the given folder with data — prepareSimwrapperDashboardFromFolder","title":"Creates dashboard for the given folder with data — prepareSimwrapperDashboardFromFolder","text":"Creates dashboard given folder data","code":""},{"path":"https://vsp.berlin/matsim-r/reference/prepareSimwrapperDashboardFromFolder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates dashboard for the given folder with data — prepareSimwrapperDashboardFromFolder","text":"","code":"prepareSimwrapperDashboardFromFolder(   folder,   dump.output.to = matsimDumpOutputDirectory,   append = FALSE )"},{"path":"https://vsp.berlin/matsim-r/reference/prepareSimwrapperDashboardFromFolder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates dashboard for the given folder with data — prepareSimwrapperDashboardFromFolder","text":"folder file path, specifies data source folder includes output_trips.csv file dump.output.output folder, yaml files saved append specifies ouput folder erased creating, default = FALSE","code":""},{"path":"https://vsp.berlin/matsim-r/reference/prepareSimwrapperDashboardFromFolder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates dashboard for the given folder with data — prepareSimwrapperDashboardFromFolder","text":"tibble output_trips folder content needed Simwrapper","code":""},{"path":"https://vsp.berlin/matsim-r/reference/prepareSimwrapperDashboardFromTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates dashboard for the given table with data — prepareSimwrapperDashboardFromTable","title":"Creates dashboard for the given table with data — prepareSimwrapperDashboardFromTable","text":"Creates dashboard given table data","code":""},{"path":"https://vsp.berlin/matsim-r/reference/prepareSimwrapperDashboardFromTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates dashboard for the given table with data — prepareSimwrapperDashboardFromTable","text":"","code":"prepareSimwrapperDashboardFromTable(   table,   dump.output.to = matsimDumpOutputDirectory,   append = FALSE )"},{"path":"https://vsp.berlin/matsim-r/reference/prepareSimwrapperDashboardFromTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates dashboard for the given table with data — prepareSimwrapperDashboardFromTable","text":"table trips_output tibble readTripsTable() dump.output.output folder, yaml files plots following functions saved : plotModalSplitBarChart(),plotModalSplitPieChart(),plotModalShift(). append specifies ouput folder erased creating, default = FALSE","code":""},{"path":"https://vsp.berlin/matsim-r/reference/prepareSimwrapperDashboardFromTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates dashboard for the given table with data — prepareSimwrapperDashboardFromTable","text":"generates folder content simwrapper trips table","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_append_distcat.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds additional dist_cat column based on the distances_array parameter — process_append_distcat","title":"Adds additional dist_cat column based on the distances_array parameter — process_append_distcat","text":"Categorizes trip distance bin based traveled distance. E.g. distance traveled 1500, distances_array (1000,2000), category \"1000-2000\".","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_append_distcat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds additional dist_cat column based on the distances_array parameter — process_append_distcat","text":"","code":"process_append_distcat(   trips_table,   distances_array = c(1000, 2000, 5000, 10000, 20000, 50000, 1e+05) )"},{"path":"https://vsp.berlin/matsim-r/reference/process_append_distcat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds additional dist_cat column based on the distances_array parameter — process_append_distcat","text":"trips_table tibble output_trips (read_output_trips) distances_array numeric vector, contains ordered distance segments (meters), standard value: c(1000,2000,5000,10000,20000,50000,100000)","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_append_distcat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds additional dist_cat column based on the distances_array parameter — process_append_distcat","text":"tibble, containing added column dist_cat","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_append_spatialcat.html","id":null,"dir":"Reference","previous_headings":"","what":"Appends an additional column with the trip type to output_trips — process_append_spatialcat","title":"Appends an additional column with the trip type to output_trips — process_append_spatialcat","text":"Using shape_file project area additional column created, categorizing trips following categories. inside: trips start end inside given shape originating: trips start inside shape end outside shape destinating: trips end inside shape start outside shape outside: trips start end outside shape","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_append_spatialcat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Appends an additional column with the trip type to output_trips — process_append_spatialcat","text":"","code":"process_append_spatialcat(trips_table, shape_table, crs)"},{"path":"https://vsp.berlin/matsim-r/reference/process_append_spatialcat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Appends an additional column with the trip type to output_trips — process_append_spatialcat","text":"trips_table tibble output_trips (read_output_trips()) shape_table sf object(data frame geometries), can created using st_read(), used categorize trips. crs numeric representation EPSG code proj4string corresponding coordinate system trip coordinates, can found network file output directory MATSim simulation","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_append_spatialcat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Appends an additional column with the trip type to output_trips — process_append_spatialcat","text":"tibble, additional column containing trip type","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_append_spatialcat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Appends an additional column with the trip type to output_trips — process_append_spatialcat","text":"Please aware process_filter_by_shape works geometry loaded.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_convert_table_to_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Transforms the data frame trips_output (from read_output_trips) from tibble to sf (table with geometry features) — process_convert_table_to_sf","title":"Transforms the data frame trips_output (from read_output_trips) from tibble to sf (table with geometry features) — process_convert_table_to_sf","text":"Transforms data frame trips_output (read_output_trips) sf object using start_x, end_x, start_y, end_y geometry features. geometry.type = st_multipoint() geometry.type = st_linestring() adds one geometry column (wkt format), geometry.type = st_point() adds geometry columns start_wkt end_wkt. Added column/columns projected given CRS (coordinate reference system). columns start_x, end_x, start_y, end_y deleted resulting data frame.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_convert_table_to_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transforms the data frame trips_output (from read_output_trips) from tibble to sf (table with geometry features) — process_convert_table_to_sf","text":"","code":"process_convert_table_to_sf(table, crs, geometry.type = st_multipoint())"},{"path":"https://vsp.berlin/matsim-r/reference/process_convert_table_to_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transforms the data frame trips_output (from read_output_trips) from tibble to sf (table with geometry features) — process_convert_table_to_sf","text":"table tibble trips_output (read_output_trips) crs numeric, coordinate system form EPSG code proj4string, can found MATSim network file geometry.type type sf transformation, default st_multipoint(), geometry.type can : !!!st_point()- resulting table contains two geometry columns: start_wkt end_wkt, representing start end points POINTS!!!  !!!st_multipoint()- resulting table contains one geometry column, representing start end points MULTIPOINT!!! !!!st_linestring() - resulting table contains one geometry column, representing  line start end points LINESTRING!!!","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_convert_table_to_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transforms the data frame trips_output (from read_output_trips) from tibble to sf (table with geometry features) — process_convert_table_to_sf","text":"sf object (data frame geometries depending geometry.type)","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_convert_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a time column to a numeric representation of minutes, hours or seconds — process_convert_time","title":"Converts a time column to a numeric representation of minutes, hours or seconds — process_convert_time","text":"default output_trips time columns(dep_time, trav_time, wait_time) 'hms' format. convert type numeric, specify time_column converted well time_format. Acceptable units \"hour\", \"minute\" \"second\".","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_convert_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a time column to a numeric representation of minutes, hours or seconds — process_convert_time","text":"","code":"process_convert_time(   trips_table,   time_format = \"hour\",   time_column = \"dep_time\" )"},{"path":"https://vsp.berlin/matsim-r/reference/process_convert_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a time column to a numeric representation of minutes, hours or seconds — process_convert_time","text":"trips_table tibble output_trips (read_output_trips) time_format character, defines time unit used (\"hour\", \"minute\", \"second\") time_column character, name column converted (dep_time, trav_time, wait_time)","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_convert_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a time column to a numeric representation of minutes, hours or seconds — process_convert_time","text":"tibble, containing converted column specified time format","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_filter_by_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Filters trips_table(from read_output_trips) by location using a shapefile — process_filter_by_shape","title":"Filters trips_table(from read_output_trips) by location using a shapefile — process_filter_by_shape","text":"takes output_trips sf object (can created using function st_read()), transforms objects match mutual coordinate system (crs) filters trips output_trips depending spatial type: spatial_type=\"inside\" returns table contains trips inside given shape spatial_type=\"originating\" returns table contains trips start inside  shape end outside shape spatial_type=\"destinating\" returns table contains trips end inside shape start outside shape spatial_type=\"outside\" returns table contains trips start end outside given shape","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_filter_by_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filters trips_table(from read_output_trips) by location using a shapefile — process_filter_by_shape","text":"","code":"process_filter_by_shape(trips_table, shape_table, crs, spatial_type = \"inside\")"},{"path":"https://vsp.berlin/matsim-r/reference/process_filter_by_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filters trips_table(from read_output_trips) by location using a shapefile — process_filter_by_shape","text":"trips_table tibble trips_output (read_output_trips) shape_table sf object(data frame geometries), can created using st_read() crs numeric representation EPSG code proj4string corresponding coordinate system trip coordinates, can found network file output directory MATSim simulation spatial_type boolean, defines trips conclude (see description)","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_filter_by_shape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filters trips_table(from read_output_trips) by location using a shapefile — process_filter_by_shape","text":"tibble, filtered trips depending shape_table spatial types (see description)","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_crs_from_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads the coordinate reference system from a MATSim output directory (output_config.xml) — process_get_crs_from_config","title":"Reads the coordinate reference system from a MATSim output directory (output_config.xml) — process_get_crs_from_config","text":"Reads coordinate reference system MATSim output directory (output_config.xml)","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_crs_from_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads the coordinate reference system from a MATSim output directory (output_config.xml) — process_get_crs_from_config","text":"","code":"process_get_crs_from_config(config_path)"},{"path":"https://vsp.berlin/matsim-r/reference/process_get_crs_from_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads the coordinate reference system from a MATSim output directory (output_config.xml) — process_get_crs_from_config","text":"config_path specifies path configuration file","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_crs_from_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads the coordinate reference system from a MATSim output directory (output_config.xml) — process_get_crs_from_config","text":"EPSG code coordinate reference system","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_dtv_distribution_by_linktype.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorize daily traffic volume (DTV) and calculate DTV for different link types. — process_get_dtv_distribution_by_linktype","title":"Categorize daily traffic volume (DTV) and calculate DTV for different link types. — process_get_dtv_distribution_by_linktype","text":"Takes tibble process_join_counts_and_links. DTV categorized bins. Finally data aggregated calculate DTV distribution link type category, excluding 'residential' 'unclassified' Data can used create multiple geom_col plots visualize compare DTV distributions count data several MATSim runs","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_dtv_distribution_by_linktype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorize daily traffic volume (DTV) and calculate DTV for different link types. — process_get_dtv_distribution_by_linktype","text":"","code":"process_get_dtv_distribution_by_linktype(   joined_frame,   from = 0,   to = 40000,   by = 5000 )"},{"path":"https://vsp.berlin/matsim-r/reference/process_get_dtv_distribution_by_linktype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Categorize daily traffic volume (DTV) and calculate DTV for different link types. — process_get_dtv_distribution_by_linktype","text":"joined_frame tibble process_join_counts_and_links Integer. Lower limit count bin, default = 0. Integer. Upper limit count bins, default = 40000. Integer. Size count bin, default = 5000.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_dtv_distribution_by_linktype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Categorize daily traffic volume (DTV) and calculate DTV for different link types. — process_get_dtv_distribution_by_linktype","text":"long-format tibble contains share DTV link types","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_dtv_estimation_quality.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorize DTV deviation and aggregate data — process_get_dtv_estimation_quality","title":"Categorize DTV deviation and aggregate data — process_get_dtv_estimation_quality","text":"Takes tibble process_join_counts_and_links. Deviation count volumes linkstats calculated categorized (.e. deviation 1.2 means 20 percent DTV MATSim counts). parameter 'aggr' set TRUE, data aggregated run link type. Can used visualize model quality link type compare several runs.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_dtv_estimation_quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorize DTV deviation and aggregate data — process_get_dtv_estimation_quality","text":"","code":"process_get_dtv_estimation_quality(   joined_frame,   aggr = TRUE,   ll = ~x * 0.8 - 200,   ul = ~x * 1.2 + 200 )"},{"path":"https://vsp.berlin/matsim-r/reference/process_get_dtv_estimation_quality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Categorize DTV deviation and aggregate data — process_get_dtv_estimation_quality","text":"joined_frame tibble process_join_counts_and_links aggr Boolean, categorized data returned aggregated, default TRUE. ll Formula calculate lower limit quality label 'exact', default = 0.8*x - 200 ul Formula calculate lower limit quality label 'exact', default = 1.2*x + 200","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_dtv_estimation_quality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Categorize DTV deviation and aggregate data — process_get_dtv_estimation_quality","text":"long-format tibble, contains estimation quality scenario link type, aggr FALSE disaggregated data returned","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_dtv_estimation_quality.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Categorize DTV deviation and aggregate data — process_get_dtv_estimation_quality","text":"Estimation quality determined 'cut' function, limits label 'exact' can adjusted tuning parameters 'll' (lower limit) 'ul' (upper limit)","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_mainmode_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates main mode distribution — process_get_mainmode_distribution","title":"Calculates main mode distribution — process_get_mainmode_distribution","text":"function process_get_mainmode_distribution calculates distribution main modes given trips_table. provides insights frequency percentage main mode within dataset.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_mainmode_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates main mode distribution — process_get_mainmode_distribution","text":"","code":"process_get_mainmode_distribution(trips_table, percentage = FALSE)"},{"path":"https://vsp.berlin/matsim-r/reference/process_get_mainmode_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates main mode distribution — process_get_mainmode_distribution","text":"trips_table tibble output_trips (read_output_trips) percentage boolean, default FALSE, sets output given percentage","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_mainmode_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates main mode distribution — process_get_mainmode_distribution","text":"tibble distribution main modes input trips_table.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_mainmode_distribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates main mode distribution — process_get_mainmode_distribution","text":"default function counts occurrences unique main mode trips_table tibble returns counts.  Alternatively, percentage parameter set TRUE, function normalizes counts represent percentage distribution main mode within data set.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_od_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates an origin/destination matrix either in conventional form (row names = origin, column names = destination)\nor for simwrapper (origin and destination as columns) — process_get_od_matrix","title":"Creates an origin/destination matrix either in conventional form (row names = origin, column names = destination)\nor for simwrapper (origin and destination as columns) — process_get_od_matrix","text":"Creates origin/destination matrix either conventional form (row names = origin, column names = destination) simwrapper (origin destination columns)","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_od_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates an origin/destination matrix either in conventional form (row names = origin, column names = destination)\nor for simwrapper (origin and destination as columns) — process_get_od_matrix","text":"","code":"process_get_od_matrix(   trips_table,   shape_path,   crs,   dump.output.to = matsimDumpOutputDirectory,   simwrapper = FALSE,   colnames = \"numeric\",   outer = FALSE )"},{"path":"https://vsp.berlin/matsim-r/reference/process_get_od_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates an origin/destination matrix either in conventional form (row names = origin, column names = destination)\nor for simwrapper (origin and destination as columns) — process_get_od_matrix","text":"trips_table tibble trips_output (read_output_trips) shape_path string, full path shapefile (.shp) (shape files made several files name folder also needs include .dbf file) crs numeric, coordinate system form EPSG code proj4string, can found MATSim network file dump.output.string, path folder save .csv file simwrapper boolean, creates output format used simwrapper path shapefile specified colnames string, column names can specified (.e. fit shape file), numbered outer boolean, determines flows outside shapefile used, standard value FALSE","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_od_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates an origin/destination matrix either in conventional form (row names = origin, column names = destination)\nor for simwrapper (origin and destination as columns) — process_get_od_matrix","text":"tibble origin/destination matrix","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_travdistance_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the travel distance distribution by main mode — process_get_travdistance_distribution","title":"Calculates the travel distance distribution by main mode — process_get_travdistance_distribution","text":"function process_get_travdistance_distribution calculates distribution travel distances based main modes given trips_table tibble. provides insights average distance traveled main mode.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_travdistance_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the travel distance distribution by main mode — process_get_travdistance_distribution","text":"","code":"process_get_travdistance_distribution(trips_table, euclidean = FALSE)"},{"path":"https://vsp.berlin/matsim-r/reference/process_get_travdistance_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the travel distance distribution by main mode — process_get_travdistance_distribution","text":"trips_table tibble output_trips (read_output_trips) euclidean boolean, standard value FALSE, set TRUE uses euclidean distance.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_travdistance_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the travel distance distribution by main mode — process_get_travdistance_distribution","text":"tibble two columns, main_mode containing mode avg_dist containing average distance traveled mode","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_travdistance_distribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates the travel distance distribution by main mode — process_get_travdistance_distribution","text":"distance can also calculated using euclidean distance origin destination. use euclidean distance set parameter euclidean TRUE.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_travelwaittime_by_mainmode.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates travel and wait time by main mode — process_get_travelwaittime_by_mainmode","title":"Calculates travel and wait time by main mode — process_get_travelwaittime_by_mainmode","text":"function process_get_travelwaittime_by_mainmode calculates average travel time average wait time main mode given trips_table tibble.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_travelwaittime_by_mainmode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates travel and wait time by main mode — process_get_travelwaittime_by_mainmode","text":"","code":"process_get_travelwaittime_by_mainmode(trips_table, time_format = \"minute\")"},{"path":"https://vsp.berlin/matsim-r/reference/process_get_travelwaittime_by_mainmode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates travel and wait time by main mode — process_get_travelwaittime_by_mainmode","text":"trips_table tibble output_trips (read_output_trips) time_format character string indicating desired time format output. options \"minute\", \"hour\", \"second\". default \"minute\".","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_get_travelwaittime_by_mainmode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates travel and wait time by main mode — process_get_travelwaittime_by_mainmode","text":"tibble containing columns main_mode containing main modes, trav_time_avg containing average travel time main mode, column wait_time_avg containing average wait time main mode.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_join_counts_and_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Join counts and linkstats to the network, creating a tibble into memory — process_join_counts_and_links","title":"Join counts and linkstats to the network, creating a tibble into memory — process_join_counts_and_links","text":"Function join counts, linkstats network links. Data can aggregated filtered time mode.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_join_counts_and_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join counts and linkstats to the network, creating a tibble into memory — process_join_counts_and_links","text":"","code":"process_join_counts_and_links(   counts,   network,   link_stats,   network_modes = c(\"car\"),   aggr_to = c(\"day\", \"hour\"),   earliest = 0,   latest = 86400 )"},{"path":"https://vsp.berlin/matsim-r/reference/process_join_counts_and_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join counts and linkstats to the network, creating a tibble into memory — process_join_counts_and_links","text":"counts tibble counts read_counts network list network nodes links link_stats List linkstats tibbles network_modes Vector network modes analyzed, default \"car\". aggr_to Determines data aggregated hourly bins daily traffic volume, can either \"day\" \"hour\" earliest Integer. Lower limit filter link stats time, default = 0. latest Integer. Upper limit filter link stats time, default = 86400 (midnight).","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_join_counts_and_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join counts and linkstats to the network, creating a tibble into memory — process_join_counts_and_links","text":"Long-format tibble MATSim link id key (\"loc_id\"), traffic volumes MATSim runs link type","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_rename_category.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace two or more named categories of any column with a new joint category name — process_rename_category","title":"Replace two or more named categories of any column with a new joint category name — process_rename_category","text":"function process_rename_category takes tibble input replaces occurrences specified categories column another name provided united_name.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_rename_category.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace two or more named categories of any column with a new joint category name — process_rename_category","text":"","code":"process_rename_category(   trips_table,   unite_template = character(0),   united_name = \"united\",   column = \"main_mode\" )"},{"path":"https://vsp.berlin/matsim-r/reference/process_rename_category.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace two or more named categories of any column with a new joint category name — process_rename_category","text":"trips_table tibble output_trips (read_output_trips) unite_template vector character strings, changes names chosen categories new specified name (.e. drtNorth drtSouth drt) united_name character string, specifies name united categories column tibble column name, used occurrences renaming","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_rename_category.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace two or more named categories of any column with a new joint category name — process_rename_category","text":"modified trips table tibble","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_rename_mainmodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace two or more modes in the column main_mode with a new joint mode — process_rename_mainmodes","title":"Replace two or more modes in the column main_mode with a new joint mode — process_rename_mainmodes","text":"function process_rename_mainmodes takes tibble trips_table input replaces occurrences specified modes column main_mode another name provided united_name.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_rename_mainmodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace two or more modes in the column main_mode with a new joint mode — process_rename_mainmodes","text":"","code":"process_rename_mainmodes(   trips_table,   unite_modes = character(0),   united_name = \"united\" )"},{"path":"https://vsp.berlin/matsim-r/reference/process_rename_mainmodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace two or more modes in the column main_mode with a new joint mode — process_rename_mainmodes","text":"trips_table tibble output_trips (read_output_trips) unite_modes vector character strings, changes names chosen modes column main_mode new chosen name (.e. drtNorth drtSouth drt) united_name character string, specifies name united mode","code":""},{"path":"https://vsp.berlin/matsim-r/reference/process_rename_mainmodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace two or more modes in the column main_mode with a new joint mode — process_rename_mainmodes","text":"tibble new main_mode representation","code":""},{"path":"https://vsp.berlin/matsim-r/reference/read_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Load MATSIM config file into Memory — read_config","title":"Load MATSIM config file into Memory — read_config","text":"Loads MATSim xml config file archive, creating list parameters xml file","code":""},{"path":"https://vsp.berlin/matsim-r/reference/read_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load MATSIM config file into Memory — read_config","text":"","code":"read_config(input_path = \".\", n_max = Inf)"},{"path":"https://vsp.berlin/matsim-r/reference/read_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load MATSIM config file into Memory — read_config","text":"input_path character string, path matsim output directory http link file. n_max integer, maximum number lines read within output_trips","code":""},{"path":"https://vsp.berlin/matsim-r/reference/read_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load MATSIM config file into Memory — read_config","text":"tibble trips_output","code":""},{"path":"https://vsp.berlin/matsim-r/reference/read_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a MATSim Counts file into memory\n\nLoads a MATSim Counts XML-file as tibble into memory — read_counts","title":"Load a MATSim Counts file into memory\n\nLoads a MATSim Counts XML-file as tibble into memory — read_counts","text":"Load MATSim Counts file memory Loads MATSim Counts XML-file tibble memory","code":""},{"path":"https://vsp.berlin/matsim-r/reference/read_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a MATSim Counts file into memory\n\nLoads a MATSim Counts XML-file as tibble into memory — read_counts","text":"","code":"read_counts(input_path)"},{"path":"https://vsp.berlin/matsim-r/reference/read_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a MATSim Counts file into memory\n\nLoads a MATSim Counts XML-file as tibble into memory — read_counts","text":"input_path character string, file path .xml file","code":""},{"path":"https://vsp.berlin/matsim-r/reference/read_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a MATSim Counts file into memory\n\nLoads a MATSim Counts XML-file as tibble into memory — read_counts","text":"tibble counts file link id (\"loc_id\") key","code":""},{"path":"https://vsp.berlin/matsim-r/reference/read_linkstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a MATSim linkstats file into memory — read_linkstats","title":"Load a MATSim linkstats file into memory — read_linkstats","text":"Loads linkstats tsv file created LinkStats class dataframe memory. Counts can provided time bin. Counts can provided qsim mode. argument network_modes used select filter columns.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/read_linkstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a MATSim linkstats file into memory — read_linkstats","text":"","code":"read_linkstats(run_ID, input_path, sample_size = 0.25)"},{"path":"https://vsp.berlin/matsim-r/reference/read_linkstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a MATSim linkstats file into memory — read_linkstats","text":"run_ID character string, ID tag columns DTV input_path character string, file path .csv .tsv file. Must comma separated. sample_size optional, double, sample size MATSim scenario scale DTV values, standard value 0.25","code":""},{"path":"https://vsp.berlin/matsim-r/reference/read_linkstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a MATSim linkstats file into memory — read_linkstats","text":"Tibble link stats qsim mode","code":""},{"path":"https://vsp.berlin/matsim-r/reference/read_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Load MATSim network into memory — read_network","title":"Load MATSim network into memory — read_network","text":"Loads MATSim XML network file, creating nodes tibble links tibble. node link attribute records network stored additional columns respective node link tibbles.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/read_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load MATSim network into memory — read_network","text":"","code":"read_network(filename)"},{"path":"https://vsp.berlin/matsim-r/reference/read_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load MATSim network into memory — read_network","text":"filename File load. Can XML gzipped XML","code":""},{"path":"https://vsp.berlin/matsim-r/reference/read_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load MATSim network into memory — read_network","text":"\"nodes\" \"links\" tibbles list object.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/read_network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load MATSim network into memory — read_network","text":"links table automatically joined nodes table node x/y coordinates (node attributes) available links table without additional processing.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/read_output_persons.html","id":null,"dir":"Reference","previous_headings":"","what":"Load MATSim output_persons table into memory — read_output_persons","title":"Load MATSim output_persons table into memory — read_output_persons","text":"Loads MATSim CSV output_persons file archive creating tibble.","code":""},{"path":"https://vsp.berlin/matsim-r/reference/read_output_persons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load MATSim output_persons table into memory — read_output_persons","text":"","code":"read_output_persons(input_path = \".\", n_max = Inf)"},{"path":"https://vsp.berlin/matsim-r/reference/read_output_persons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load MATSim output_persons table into memory — read_output_persons","text":"input_path character string, path MATSim output directory http link file n_max optional, integer, maximum number lines read, standard value Inf","code":""},{"path":"https://vsp.berlin/matsim-r/reference/read_output_persons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load MATSim output_persons table into memory — read_output_persons","text":"tibble output_persons","code":""},{"path":"https://vsp.berlin/matsim-r/reference/read_output_trips.html","id":null,"dir":"Reference","previous_headings":"","what":"Load MATSim output_trips table into memory — read_output_trips","title":"Load MATSim output_trips table into memory — read_output_trips","text":"Loads MATSim output_trips.csv file archive creating tibble","code":""},{"path":"https://vsp.berlin/matsim-r/reference/read_output_trips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load MATSim output_trips table into memory — read_output_trips","text":"","code":"read_output_trips(input_path = \".\", n_max = Inf)"},{"path":"https://vsp.berlin/matsim-r/reference/read_output_trips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load MATSim output_trips table into memory — read_output_trips","text":"input_path character string, path MATSim output directory http link file n_max optional, integer, maximum number lines read, standard value Inf","code":""},{"path":"https://vsp.berlin/matsim-r/reference/read_output_trips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load MATSim output_trips table into memory — read_output_trips","text":"tibble output_trips","code":""},{"path":"https://vsp.berlin/matsim-r/reference/symlog_trans.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to create symlog scaling for a plot — symlog_trans","title":"A function to create symlog scaling for a plot — symlog_trans","text":"Can used symlog scale axis ggplot object. called plot_count_scatterplot. Note function taken Stackoverflow! informations, see thread : https://stackoverflow.com/questions/14613355/--get-something-like-matplotlibs-symlog-scale--ggplot--lattice","code":""},{"path":"https://vsp.berlin/matsim-r/reference/symlog_trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to create symlog scaling for a plot — symlog_trans","text":"","code":"symlog_trans(base = 10, thr = 1, scale = 1)"},{"path":"https://vsp.berlin/matsim-r/reference/symlog_trans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to create symlog scaling for a plot — symlog_trans","text":"base base log thr threshold data scaled log scale scale","code":""}]
